name: Upload Required Packages to CodeArtifact with Lockfile

on:
  push:
    branches:
      - master

jobs:
  upload-packages:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Needed to get previous commit

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tools
        run: |
          pip install awscli packaging

      - name: Prepare lockfile
        run: |
          LOCKFILE=approved_packages.lock
          touch $LOCKFILE

      - name: Determine packages to process
        id: new_packages
        run: |
          # Ignore empty lines or comments
          sort required_packages.txt | grep -vE '^\s*#|^\s*$' > current.txt
          sort approved_packages.lock | grep -vE '^\s*#|^\s*$' > lock_sorted.txt

          # Get new packages not yet in lockfile
          comm -23 current.txt lock_sorted.txt > new_packages.txt || true
          echo "New packages to process:"
          cat new_packages.txt

          echo "NEW_PACKAGES<<EOF" >> $GITHUB_ENV
          cat new_packages.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Download and upload new packages
        run: |
          DOMAIN="${{ secrets.DOMAIN_NAME }}"
          REPO="${{ secrets.REPO_NAME }}"

          mkdir -p approved_pkgs

          if [ -z "$NEW_PACKAGES" ]; then
            echo "No new packages to process."
            exit 0
          fi

          echo "$NEW_PACKAGES" | while IFS= read -r line; do
            [[ -z "$line" || "$line" =~ ^# ]] && continue

            # Download package and dependencies
            pip download "$line" -d approved_pkgs --no-binary=:all:
          done

          echo "Processing downloaded files..."
          for file in approved_pkgs/*; do
            fname=$(basename "$file")

            # Parse package name and version reliably
            read pkg ver <<< $(python3 - <<END
              from packaging.utils import canonicalize_name
              import re, sys

              fname = "$fname"
              fname_no_ext = re.sub(r'(\.tar\.gz|\.zip|\.whl)$', '', fname)
              parts = fname_no_ext.rsplit('-', maxsplit=1)
              if len(parts) != 2:
                  sys.exit()
              name, ver = parts
              print(canonicalize_name(name), ver)
              END
            )

            if [ -z "$pkg" ] || [ -z "$ver" ]; then
              echo "Could not parse package/version from $fname, skipping."
              continue
            fi

            echo "Checking $pkg==$ver ..."
            exists=$(aws codeartifact list-package-versions \
              --domain "$DOMAIN" \
              --repository "$REPO" \
              --format pypi \
              --package "$pkg" \
              --query "versions[?version=='$ver'].version" \
              --output text 2>/dev/null || true)

            if [ -n "$exists" ]; then
              echo "$pkg==$ver already exists, skipping."
              continue
            fi

            echo "Uploading $fname ..."
            aws codeartifact publish-package-version \
              --domain "$DOMAIN" \
              --repository "$REPO" \
              --format pypi \
              --package "$pkg" \
              --package-version "$ver" \
              --asset-name "$fname" \
              --asset fileb://"$file"

            # Append successfully uploaded package to lockfile
            echo "$pkg==$ver" >> approved_packages.lock
          done

      - name: Commit updated lockfile
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update approved_packages.lock with newly uploaded packages"
          file_pattern: approved_packages.lock
          branch: master
