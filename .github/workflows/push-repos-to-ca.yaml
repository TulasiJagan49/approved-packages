name: Upload Required Packages to CodeArtifact

on:
  push:
    paths:
      - "required_packages.txt"

jobs:
  upload-packages:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tools
        run: |
          pip install awscli

      - name: Download and upload packages
        run: |
          DOMAIN="${{ secrets.DOMAIN_NAME }}"
          REPO="${{ secrets.REPO_NAME }}"

          mkdir -p approved_pkgs

          echo "Downloading approved packages and their dependencies..."
          pip download -r required_packages.txt -d approved_pkgs --no-binary=:all:

          echo "Processing downloaded files..."
          for file in approved_pkgs/*; do
            fname=$(basename "$file")
            
            # Normalize package name and version from filename
            # Example: requests-2.31.0.tar.gz â†’ pkg=requests, ver=2.31.0
            pkg=$(echo "$fname" | sed -E 's/-[0-9].*//')
            ver=$(echo "$fname" | sed -E 's/^[^-]+-([0-9][^.]*)\..*/\1/')

            if [ -z "$pkg" ] || [ -z "$ver" ]; then
              echo "Could not parse package/version from $fname, skipping."
              continue
            fi

            echo "Checking $pkg==$ver ..."
            exists=$(aws codeartifact list-package-versions \
              --domain "$DOMAIN" \
              --repository "$REPO" \
              --format pypi \
              --package "$pkg" \
              --query "versions[?version=='$ver'].version" \
              --output text)

            if [ -n "$exists" ]; then
              echo "$pkg==$ver already exists, skipping."
              continue
            fi

            echo "Uploading $fname ..."
            aws codeartifact publish-package-version \
              --domain "$DOMAIN" \
              --repository "$REPO" \
              --format pypi \
              --package "$pkg" \
              --package-version "$ver" \
              --asset-name "$fname" \
              --asset fileb://"$file"
          done
